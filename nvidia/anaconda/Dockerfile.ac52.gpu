
FROM sorididim11/shinhan-dl-base:gpu

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH=/opt/conda/bin:$PATH
# For CUDA profiling, TensorFlow requires CUPTI.
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH:/usr/local/lib

RUN apt-get update --fix-missing && \
    apt-get install -y curl grep sed dpkg wget bzip2 ca-certificates \
            libglib2.0-0 libxext6 libsm6 libxrender1 \
            git mercurial subversion \
            libfreetype6-dev libhdf5-serial-dev libpng12-dev libzmq3-dev pkg-config \
            rsync software-properties-common unzip \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# anaconda3 install
# COPY Anaconda3-5.2.0-Linux-x86_64.sh /data/Anaconda3-5.2.0-Linux-x86_64.sh
# RUN bash /data/Anaconda3-5.2.0-Linux-x86_64.sh -b -p /opt/conda && \
#     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
#     echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
#     echo "conda activate base" >> ~/.bashrc && \
#     rm -rf /data/Anaconda3-5.2.0-Linux-x86_64.sh

RUN wget --quiet https://repo.anaconda.com/archive/Anaconda3-5.2.0-Linux-x86_64.sh -O ~/anaconda.sh && \
    /bin/bash ~/anaconda.sh -b -p /opt/conda && \
    rm ~/anaconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

RUN TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean

RUN conda install --yes --quiet  \
        thrift \
        thrift_sasl \
        && \
    conda install --yes --quiet -c lukepfister \
        pycuda \
        scikits.cuda \
        && \
    conda clean -tipsy

RUN pip install --quiet --no-cache-dir \
        thriftpy \
        PyHive \
        impala \
        pyodbc 

COPY jupyter_notebook_config.py /root/.jupyter/
COPY notebooks /notebooks
COPY run_jupyter.sh /

EXPOSE 8888 6006

WORKDIR "/notebooks"

ENTRYPOINT [ "/usr/bin/tini", "--" ]
CMD [ "/run_jupyter.sh", "--no-browser", "--ip=0.0.0.0", "--allow-root", "--NotebookApp.token="]
