ARG  DEVICE_TYPE=gpu
ARG VERSION
FROM sorididim11/dl-base-$DEVICE_TYPE:$VERSION

ARG VERSION
ARG  DEVICE_TYPE
LABEL version=$VERSION device-type=$DEVICE_TYPE

USER root


# Configure environment
ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/bash 
ENV PATH=$CONDA_DIR/bin:$PATH \
    HOME=/home/$NB_USER 

ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH


USER $NB_UID



# Install conda as jovyan and check the md5 sum provided on the download site
ENV MINICONDA_VERSION 4.3.30
LABEL MINICONDA=$MINICONDA_VERSION
RUN cd /tmp && \
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "0b80a152332a4ce5250f3c09589c7a81 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    $CONDA_DIR/bin/conda config --system --prepend channels conda-forge && \
    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \
    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \
    $CONDA_DIR/bin/conda update --all --quiet --yes && \
    conda clean -tipsy && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# Install Jupyter Notebook and Hub
RUN conda install --quiet --yes \
    'notebook' \    
    'jupyterlab' \
    && conda clean -tipsy && \        
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

RUN  if [ "$DEVICE_TYPE" = "gpu" ] ; then  conda install --quiet --yes tensorflow-gpu==1.9.0; else conda install --quiet --yes tensorflow==1.9.0; fi \
     && conda clean -tipsy  \
     && fix-permissions $CONDA_DIR && fix-permissions /home/$NB_USER

# Install Jupyter Notebook and Hub
RUN conda install --quiet --yes \
          seaborn==0.9.0 \  
          matplotlib==3.0.0 \
          scikit-learn==0.20.0 \
          numpy==1.15.2 \
          pandas==0.23.4 \
          statsmodels==0.9.0 \ 
          scipy==1.1.0 \
          cython==0.28.5 \
          pytest==3.8.2 \
          numba==0.40.0 \
          pytorch==0.4.0 \
          tensorboard==1.9.0 \
          keras==2.2.4 \
    && conda clean -tipsy \
    && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER


RUN pip install --upgrade setuptools && pip install --quiet --no-cache-dir \
        xgboost==0.80 \
        eli5==0.8 \
        datatable==0.6.0 \
    && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER


RUN echo "export LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> /home/$NB_USER/.bashrc && \    


USER root


# Set up our notebook config.
COPY  jupyter_notebook_config.py /etc/jupyter/
RUN rm -rf /home/$NB_USER/work
COPY  notebooks /home/$NB_USER/notebooks/samples/
COPY  run_jupyter.sh /usr/local/bin/
RUN chown -R $NB_USER:$NB_UID /home/$NB_USER/notebooks/samples && \
    fix-permissions /etc/jupyter/ && fix-permissions /home/$NB_USER/notebooks/samples

EXPOSE 8888 6006


CMD [ "/usr/local/bin/run_jupyter.sh", "--no-browser", "--ip=0.0.0.0", "--allow-root", "--NotebookApp.token="]


# Switch back to jovyan to avoid accidental container runs as root
USER $NB_UID